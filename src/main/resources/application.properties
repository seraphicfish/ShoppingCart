# ===============================
# = DATA SOURCE
# ===============================

# Connection url for the database "<<dbname>>"
# SQL Server
spring.datasource.url = jdbc:sqlserver://localhost:1433;databaseName=ShoppingCart

# Database driver name
# SQL Server
spring.datasource.driverClassName = com.microsoft.sqlserver.jdbc.SQLServerDriver

# Username and password
spring.datasource.username = sasa
spring.datasource.password = Abc*1234

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.generate-ddl = false
spring.jpa.show-sql = true

# Ensuring that we do not use the new squence generator of Hibernate 5 (for code compatibility)
spring.jpa.hibernate.use-new-id-generator-mappings = false

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Define the hibernate naming strategy
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Allows Hibernate to generate SQL optimized for a particular DBMS
# SQL Server
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.SQLServerDialect

# Setup the Hibernate session factory
spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext
